// to install django either install it directly or make a requirements.txt file which
would contain all the dependencies, and the run that file using
->  pip install -r requirements.txt

// Creating a Django Project
1. create an project -> django-admin startproject project_name
2. Changes in settings.py:
    -> under STATIC_URL add:  STATIC_ROOT = BASE_DIR / 'static'
    -> under the ALLOWED_URLS add '.pythonanywhere' & '127.0.0.1' since it would be deployed there
3. Change/activating the database
    -> cd projectName
    -> python manage.py migrate (to create a database)

4. Starting the Webserver
    -> python manage.py runserver
5. Django Models
    A model is a special kind of object that is saved in the Database
    Creating an application:
        -> python manage.py startapp app_name
6. Saving the application in settings.py
    Under installed_apps add a line: 'app_name'
7. To add a model to the database, use the following commands:
        -> python manage.py makemigrations app_name : (here blog)
        -> python manage.py migrate app_name
8. To add/edit/delete posts, we would use Django Admin
    -> from .models import Class_name(here Post)
    -> admin.site.register(Post)
9. To access the Django Admin we have to create a superuser, one who has control over everything on the site
    -> python manage.py createsuperuser
10. Deploying the website on pythonanywhere:(not compulsary)
    -> After making an account, generate the API key and type in the following commands
    -> pip3.8 install --user pythonanywhere
    ->pa_autoconfigure_django.py --python=3.8 https://github.com/<your-github-username>/my-first-blog.git
    -> python manage.py createsuperuser
11. Adding URLS
    -> in project/urls.py
        -> from blog.urls import views
        -> path('', include('blogs.urls')
    -> in blog
        -> create urls.py
        -> from django.urls import path
        -> from . import views
        -> path('',views.home,name = 'home')
12. Adding views
    -> def the function:
        return render(request, 'path to html', {})

        OR
        return HttpResponse("Content")
13. Templates
    -> in your app_folder(here blog) create a dir templates in which create another dir called app_name(here blog) then add the html file
    -> in settings update the Templates section using, BASE_DIR / 'templates'
14. Django ORM and QuerySets

